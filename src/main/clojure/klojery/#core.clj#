(ns klojery.core
  (:use (clojure.core))
  (:import (de.uka.ilkd.key.script ScriptAPI)
           (de.uka.ilkd.key.proof Proof)
           (de.uka.ilkd.key.proof.init AbstractProfile)
           (de.uka.ilkd.key.util KeYConstants)
           (de.uka.ilkd.key.proof.io ProofSaver ProofLoader ProblemLoader)
           (de.uka.ilkd.key.settings ProofIndependentSettings)
           (java.io File))
  (:gen-class))

(defn get-key-version []
  "returns the current version of the used KeY version"
  (KeYConstants/VERSION))

(defn get-key-copyright []
  "returns the copyright note from KeY"
  (KeYConstants/COPYRIGHT))

(defn load-problem [^String filename]
  ""
  (deftype CatchProblemLoaderResult
      ProverTaskListener
  (doto
   (ProblemLoader. file nil nil nil
                   (AbstractProfile/getDefaultProfile)
                   false nil true nil nil)
   .load))


(def save-proof [^Proof proof ^String filename]
  (.save (ProofSaver. proof (File. filename))))

(defn load-proof [^String filename]
  (.load (ProofLoader. (File. filename))))

(defn -main
  "I don't do a whole lot ... yet."
  [& args]
  (println (get-key-version) "\n"
           (get-key-copyright) "\n")


  ;;(clojure.main/repl :init (fn [] (in-ns 'klojery.core))))
                                        ;(reply.main/launch args))
  )
